{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "STSAndDescribe",
      "Effect": "Allow",
      "Action": [
        "sts:GetCallerIdentity",
        "ec2:Describe*",
        "elasticloadbalancing:Describe*",
        "servicequotas:ListAWSDefaultServiceQuotas",
        "tag:GetResources"
      ],
      "Resource": "*"
    },
    {
      "Sid": "EC2AllInRegion",
      "Effect": "Allow",
      "Action": "ec2:*",
      "Resource": "*",
      "Condition": { "StringEquals": { "aws:RequestedRegion": "eu-south-1" } }
    },
    {
      "Sid": "ELBv2AllInRegion",
      "Effect": "Allow",
      "Action": "elasticloadbalancing:*",
      "Resource": "*",
      "Condition": { "StringEquals": { "aws:RequestedRegion": "eu-south-1" } }
    },
    {
      "Sid": "IAMForInstanceProfilesAndManifests",
      "Effect": "Allow",
      "Action": [
        "iam:AddRoleToInstanceProfile",
        "iam:CreateInstanceProfile",
        "iam:CreateRole",
        "iam:DeleteInstanceProfile",
        "iam:DeleteRole",
        "iam:DeleteRolePolicy",
        "iam:GetInstanceProfile",
        "iam:GetRole",
        "iam:GetRolePolicy",
        "iam:GetUser",
        "iam:ListInstanceProfilesForRole",
        "iam:ListRoles",
        "iam:ListUsers",
        "iam:PassRole",
        "iam:PutRolePolicy",
        "iam:RemoveRoleFromInstanceProfile",
        "iam:SimulatePrincipalPolicy",
        "iam:TagInstanceProfile",
        "iam:TagRole",
        "iam:GetUserPolicy",
        "iam:ListAccessKeys",
        "iam:PutUserPolicy",
        "iam:TagUser",
        "iam:CreateServiceLinkedRole"
      ],
      "Resource": "*"
    },
    {
      "Sid": "Route53Read",
      "Effect": "Allow",
      "Action": [
        "route53:GetHostedZone",
        "route53:ListResourceRecordSets",
        "route53:ChangeResourceRecordSets",
        "route53:GetDNSSEC"
      ],
      "Resource": [
        "arn:aws:route53:::hostedzone/*"
      ]
    },
    {
      "Sid": "Route53List",
      "Effect": "Allow",
      "Action": [
        "route53:ListHostedZones",
        "route53:ListHostedZonesByName"
      ],
      "Resource": "*"
    },
    {
      "Sid": "Route53ReadWrite",
      "Effect": "Allow",
      "Action": [
        "route53:GetHostedZone",
        "route53:ListResourceRecordSets",
        "route53:ChangeResourceRecordSets",
        "route53:GetDNSSEC",
        "route53:ListHostedZonesByName"
      ],
      "Resource": "arn:aws:route53:::hostedzone/*"
    },
    {
      "Sid": "Route53ForUPI",
      "Effect": "Allow",
      "Action": [
        "route53:ChangeResourceRecordSets",
        "route53:ChangeTagsForResource",
        "route53:CreateHostedZone",
        "route53:DeleteHostedZone",
        "route53:GetChange",
        "route53:GetHostedZone",
        "route53:ListHostedZones",
        "route53:ListHostedZonesByName",
        "route53:ListResourceRecordSets",
        "route53:ListTagsForResource",
        "route53:UpdateHostedZoneComment"
        "route53:ListHostedZonesByVPC"
      ],
      "Resource": "*"
    },
    {
      "Sid": "Route53ZoneVpcAssoc",
      "Effect": "Allow",
      "Action": [
        "route53:AssociateVPCWithHostedZone",
        "route53:DisassociateVPCFromHostedZone"
      ],
      "Resource": "*"
  },
  {
      "Sid": "S3ListBuckets",
    "Effect": "Allow",
    "Action": "s3:ListAllMyBuckets",
    "Resource": "*"
  },
  {
      "Sid": "S3IgnBucketsAll",
      "Effect": "Allow",
      "Action": "s3:*",
      "Resource": [
        "arn:aws:s3:::ocp-*ign-eu-south-1-*"
      ]
    },
    {
      "Sid": "S3IgnObjectsAll",
      "Effect": "Allow",
      "Action": "s3:*",
      "Resource": [
        "arn:aws:s3:::ocp-*ign-eu-south-1-*/*"
      ]
    }
  ]
}